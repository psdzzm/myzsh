# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your neeeds...

source ${ZDOTDIR:-$HOME}/.zprezto/modules/zsh-histdb/sqlite-history.zsh
autoload -Uz add-zsh-hook

source ${ZDOTDIR:-$HOME}/.zprezto/modules/zsh-histdb/histdb-interactive.zsh
bindkey '^r' _histdb-isearch

_zsh_autosuggest_strategy_histdb_top_here() {
    local query="SELECT commands.argv FROM
history
LEFT JOIN commands ON history.command_id = commands.id
LEFT JOIN places ON history.place_id = places.id
WHERE places.dir LIKE '$(sql_escape $PWD)%'
AND commands.argv LIKE '$(sql_escape $1)%'
GROUP BY commands.argv
ORDER BY (SELECT start_time FROM history WHERE command_id = commands.id ORDER BY start_time DESC LIMIT 1) DESC
LIMIT 1"
    suggestion=$(_histdb_query "$query")
}

ZSH_AUTOSUGGEST_STRATEGY=histdb_top_here

unsetopt SHARE_HISTORY
setopt INC_APPEND_HISTORY_TIME

export GPG_TTY=$(tty)
export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/gnupg/S.gpg-agent.ssh"

export CARGO_HOME=/tools/rust/cargo
export RUSTUP_HOME=/tools/rust/rustup
. "/tools/rust/cargo/env"  # Rust

export VAGRANT_HOME=/tools/vagrant

export CLOUDSDK_ROOT_DIR=/opt/google-cloud-cli
export CLOUDSDK_PYTHON=/usr/bin/python
export CLOUDSDK_PYTHON_ARGS=-S
export GOOGLE_CLOUD_SDK_HOME=$CLOUDSDK_ROOT_DIR

path+=("$HOME/.local/bin" "$HOME/bin/bin" "/tools/texlive/2024/bin/x86_64-linux" "/tools/MATLAB/R2024a/bin" "$HOME/.local/share/JetBrains/Toolbox/scripts" "$CLOUDSDK_ROOT_DIR/bin")

ld_library_path+=('')

export XILINX_XRT=/opt/xilinx/xrt
# export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6 # /usr/lib/x86_64-linux-gnu/libcudart.so:

export TMPDIR=$HOME/ramdisk/tmp



# Check if ssh
if [[ -n $SSH_CONNECTION ]]; then
  export PINENTRY_USER_DATA=USE_TTY=1
  unset SSH_AUTH_SOCK
fi


# alias sudo='sudo '
alias matlab='matlab -desktop'
alias ll='ls -AlFhi --group-directories-first'
alias df='duf -width $(tput cols)'
alias dus='dust -d 1'
alias tmux='tmux -u'
# alias upgrade='sudo bash -c "apt update && apt upgrade -y && apt autoremove --purge -y && apt autoclean -y"'
alias watch='watch -c -d'
alias ccat='pygmentize -g'
alias dockerr='docker -H unix:///var/run/docker_ramdisk.sock'
alias dockerclean='docker rmi $(docker images -qf dangling=true); docker volume prune; docker network prune; docker builder prune'

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/tools/conda/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/tools/conda/etc/profile.d/conda.sh" ]; then
        . "/tools/conda/etc/profile.d/conda.sh"
    else
        export PATH="/tools/conda/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/tools/conda/etc/profile.d/mamba.sh" ]; then
    . "/tools/conda/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<

PATH="/home/ethan/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/ethan/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/ethan/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/ethan/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/ethan/perl5"; export PERL_MM_OPT;
